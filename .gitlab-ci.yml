stages:
- build
- test



include:
- template: Jobs/SAST.gitlab-ci.yml

sast:
  needs: []


variables:
  YARN_CACHE_DIR: "$CI_PROJECT_DIR/.yarn-cache"

default:
  tags:
  - flarenetwork



.test-node-sc:
  stage: test
  image: node:latest
  timeout: 3h
  needs:
  - build-smart-contracts
  variables:
    DEPLOYER_PRIVATE_KEY: "0xc5e8f61d1ab959b397eecc0a37a6517b8e67a0e7cf1f4bce5591f3ed80199122"
    GENESIS_GOVERNANCE_PRIVATE_KEY: "0x50777f5a3ce16445e63411bf1e865a2a11d5ca3c4cbc1de00808a52180bd8d3c"
    GOVERNANCE_PRIVATE_KEY: "0xd49743deccbccc5dc7baa8e69e5be03298da8688a15dd202e20f15d5e0e9a9fb"
    GOVERNANCE_PUBLIC_KEY: "0xeAD9C93b79Ae7C1591b1FB5323BD777E86e150d4"
    GOVERNANCE_EXECUTOR_PUBLIC_KEY: "0xE5904695748fe4A84b40b3fc79De2277660BD1D3"
  cache:
    key:
      files:
      - yarn.lock
    paths:
    - node_modules/
    policy: pull
  dependencies:
  - build-smart-contracts
  before_script:
  - yarn install --frozen-lockfile --cache-folder $YARN_CACHE_DIR



### Jobs


build-smart-contracts:
  stage: build
  needs: []
  image: node:latest
  before_script:
  - yarn install --frozen-lockfile --cache-folder $YARN_CACHE_DIR
  script:
  - yarn c
  cache:
    key:
      files:
      - yarn.lock
    paths:
    - node_modules/
    policy: pull-push
  rules:
  - !reference [coverage:schedule, rules]
  - !reference [fuzzer:schedule, rules]
  - when: on_success
  artifacts:
    paths:
    - typechain-truffle
    expire_in: 1 week


test-unit:
  extends: .test-node-sc
  parallel:
    matrix:
    - TEST_PATH:
      - ./test/unit/fasset/implementation
      - ./test/unit/fasset/library
      - ./test/unit/{bots,governance,utils,fasset/mock}
    - TEST_ARG:
      - test/unit/gasReport/GasReport.ts
  script:
  - yarn hardhat test --network hardhat ${TEST_ARG}


test-contract-integration:
  extends: .test-node-sc
  script:
  - yarn test_integration_hh


test-linter:
  extends: .test-node-sc
  script:
  - yarn lint


test-slither-check:
  extends: .test-node-sc
  variables:
    PIP_BREAK_SYSTEM_PACKAGES: "1"
  before_script:
  - apt update
  - apt install -y python3-pip
  - pip3 install slither-analyzer
  - yarn install --frozen-lockfile --cache-folder $YARN_CACHE_DIR
  script:
  - yarn slither


coverage:schedule:
  extends:
  - .test-node-sc
  stage: test
  retry: 2
  script:
  - yarn cov
  rules:
  - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "coverage"'
    when: always


fuzzer:schedule:
  extends:
  - .test-node-sc
  stage: test
  timeout: 4 hours
  variables:
    NODE_OPTIONS: "--max_old_space_size=6144"
    LOOPS: 5000
    CHANGE_PRICE_AT: '300,600,...'
    # CHANGE_PRICE_FACTOR: '{"default": [0.9, 1.1]}'
  script:
  - yarn fuzzing_fasset
  artifacts:
    paths:
    - test_logs/fasset-fuzzing.log
    name: fasset-fuzzing
    when: always
    expire_in: 30 days
  rules:
  - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_NAME == "fuzzer"'
    when: always
